---
import '~/styles/index.css'
import '~/styles/heti.min.css'
import Header from '~/components/Header.astro'
import Footer from '~/components/Footer.astro'
import { ViewTransitions } from 'astro:transitions'
import { SEO } from 'astro-seo'
import { getImage } from 'astro:assets'

interface Props {
  title?: string
  desc?: string
  banner?: ImageMetadata
}

const { title: propsTitle, desc: propsDesc, banner } = Astro.props
const {
  config: {
    title: configTitle,
    desc: configDesc,
    website: canonical,
    header
  }
} = Astro.locals

// 合并标题和描述，使用空字符串作为回退
const title = propsTitle ?? configTitle ?? ''
const desc = propsDesc ?? configDesc ?? ''

// 缓存优化后的图片 URL
let optimizedImage: string | null = null

// 图片处理封装为独立函数
async function getOptimizedImage(): Promise<string> {
  if (optimizedImage) {
    return optimizedImage // 从缓存中获取
  }

  if (!banner) {
    optimizedImage = '/placeholder.png'
    return optimizedImage
  }

  try {
    const image = await getImage({ src: banner, format: 'jpeg' })
    optimizedImage = new URL(image.src, Astro.url).toString()
    return optimizedImage
  } catch (error) {
    console.error('Image processing failed:', error)
    optimizedImage = new URL('/placeholder.png', Astro.url).toString()
    return optimizedImage
  }
}

const optimizedImageSrc = await getOptimizedImage()

// 固定推特卡片类型，动态内容后置
const twitterMeta = [
  { name: 'twitter:card', content: 'summary_large_image' },
  { name: 'twitter:image:src', content: optimizedImageSrc },
  { name: 'twitter:image:alt', content: desc },
  { name: 'twitter:title', content: title },
  { name: 'twitter:description', content: desc },
]

// 仅在有效时添加创作者信息
if (header?.twitter) {
  twitterMeta.push(
    { name: 'twitter:creator', content: header.twitter },
    { name: 'twitter:site', content: header.twitter }
  )
}
---

<html lang="en">
  <head>
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <ViewTransitions />
    <SEO
      charset="utf-8"
      title={title}
      description={desc}
      extend={{
        link: [{ rel: 'icon', href: '/favicon.ico', type: 'image/svg+xml' }],
        meta: twitterMeta,
      }}
      openGraph={{
        basic: {
          title,
          type: "article",
          image: optimizedImageSrc,
          url: canonical,
        }
      }}
    />
    <style>
      /* 内联关键 CSS - START */
      .container{width:100%}
.post-title{margin:0;font-size:1.25rem;font-weight:700;line-height:1.875rem}
.post-title\\!{margin:0!important;font-size:1.25rem!important;font-weight:700!important;line-height:1.875rem!important}
.icon{display:inline-block}
.clipboard-copy{position:absolute;top:.5rem;right:.5rem;width:1.75rem;height:1.75rem;display:flex;justify-content:center;align-items:center;border-radius:.25rem}
.clipboard-copy:hover{background-color:#30363d}
@media (min-width: 640px){.container{max-width:640px}}
@media (min-width: 768px){.container{max-width:768px}}
@media (min-width: 1024px){.container{max-width:1024px}}
@media (min-width: 1280px){.container{max-width:1280px}}
@media (min-width: 1536px){.container{max-width:1536px}}.contain-layout,[contain-layout=""]{contain:layout}.sticky{position:sticky}.top-0{top:0}.line-clamp-4{overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:4;line-clamp:4}.m-a{margin:auto}.mx-auto{margin-left:auto;margin-right:auto}.mb-2\\.5{margin-bottom:.625rem}.mb-4{margin-bottom:1rem}.mb-8{margin-bottom:2rem}.ml-2\\.5{margin-left:.625rem}.ml-6{margin-left:1.5rem}.mt-12{margin-top:3rem}.mt-2{margin-top:.5rem}.mt-5{margin-top:1.25rem}.mt-8{margin-top:2rem}.h-screen{height:100vh}.max-w-6xl{max-width:72rem}.min-h-screen{min-height:100vh}.min-w-xl{min-width:36rem}.flex,[un-flex~="~"]{display:flex}.inline-flex{display:inline-flex}.grow-1{flex-grow:1}[un-flex~=row]{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col,[un-flex~=col]{flex-direction:column}@keyframes fadein-down{0%{opacity:.1;transform:translateY(-20px)}to{opacity:1;transform:translateY(0)}}@keyframes fadein-left{0%{opacity:.1;transform:translate(20px)}to{opacity:1;transform:translate(0)}}.animate-fadein-down{animation:fadein-down 1s linear 1}.animate-fadein-left{animation:fadein-left 1s linear 1}.cursor-pointer{cursor:pointer}.list-disc{list-style-type:disc}.list-inside{list-style-position:inside}.items-start,[un-flex~=items-start]{align-items:flex-start}.items-center{align-items:center}.justify-center,[un-flex~=justify-center]{justify-content:center}.justify-between{justify-content:space-between}.gap-1,[un-flex~=gap-1]{gap:.25rem}.gap-2,[un-flex~=gap-2]{gap:.5rem}.gap-2\\.5,[un-flex~="gap-2.5"]{gap:.625rem}.gap-3\\.5{gap:.875rem}
      /* 内联关键 CSS - END */
    </style>
  </head>
  <body>
    <div class="container contain-layout m-a" un-max-lg="animate-fadein-down" un-lg="flex flex-row-reverse justify-between gap-4 px-8 mx-auto max-w-6xl">
      <aside un-lg="sticky top-0 h-screen py-20 animate-fadein-left gap-8" un-lg:flex="~ col justify-between items-start gap-4" class="p-7.5">
        <Header />
        <Footer class="max-lg:hidden" />
      </aside>

      <main un-lg="py-20 min-w-xl animate-fadein-down" class="p-7.5">
        <slot />
      </main>

      <Footer class="lg:hidden p-7.5" />
    </div>
  </body>
</html>
---
import '~/styles/index.css'
import '~/styles/heti.min.css'
import Header from '~/components/Header.astro'
import Footer from '~/components/Footer.astro'
import { ViewTransitions } from 'astro:transitions'
import { SEO } from 'astro-seo'
import { getImage } from 'astro:assets'

interface Props {
  title?: string
  desc?: string
  banner?: ImageMetadata
}

const { title: propsTitle, desc: propsDesc, banner } = Astro.props
const { config: { title: configTitle, desc: configDesc, website: canonical }, header } = Astro.locals

// 合并标题和描述，使用空字符串作为回退
const title = propsTitle ?? configTitle ?? ''
const desc = propsDesc ?? configDesc ?? ''

// 图片处理封装为独立函数
async function getOptimizedImage() {
  if (!banner) return '/placeholder.png'
  
  try {
    const image = await getImage({ src: banner, format: "jpeg" })
    return new URL(image.src, Astro.url).toString()
  } catch (error) {
    console.error('Image processing failed:', error)
    return new URL("/placeholder.png", Astro.url).toString()
  }
}

const optimizedImage = await getOptimizedImage()

// 固定推特卡片类型，动态内容后置
const twitterMeta = [
  { name: "twitter:card", content: "summary_lar